name: Github Actions with Game CI

on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  Tests:
    name: Tests in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false    # Continue to the next element in matrix if fail instead of stop all
      matrix:
        testMode:
          - EditMode
          - PlayMode

    # Job Steps
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # Cache
      - name: Cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Tests
      - uses: game-ci/unity-test-runner@v4
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          #githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: Test results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  Builds:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Continue to the next element in matrix if fail instead of stop all
      matrix:
        targetPlatform:
          - StandaloneOSX       # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64   # Build a Linux 64-bit standalone.
          - iOS                 # Build an iOS player.
          - WebGL               # WebGL.

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # Cache
      - name: Cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Builds
      - name: Build project for ${{ matrix.testMode }}
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: Build (${{ matrix.targetPlatform }})
          path: build/${{ matrix.targetPlatform }}